Given Preorder, Inorder and Postorder traversals of some tree of size N. The task is to check if they are all of the same tree or not.

Example 1:

Input:
N = 5
preorder[] = {1, 2, 4, 5, 3}
inorder[] = {4, 2, 5, 1, 3}
postorder[] = {4, 5, 2, 3, 1}
Output: Yes
Explanation: 
All of the above three traversals 
are of the same tree.
           1
         /   \
        2     3
      /   \
     4     5



class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None

def buildTreeFromPreIn(preorder, inorder):
    if not preorder:
        return None

    root_val = preorder[0]
    root = TreeNode(root_val)
    root_index = inorder.index(root_val)

    root.left = buildTreeFromPreIn(preorder[1:1 + root_index], inorder[:root_index])
    root.right = buildTreeFromPreIn(preorder[1 + root_index:], inorder[root_index + 1:])

    return root

def buildTreeFromPostIn(postorder, inorder):
    if not postorder:
        return None

    root_val = postorder[-1]
    root = TreeNode(root_val)
    root_index = inorder.index(root_val)

    root.left = buildTreeFromPostIn(postorder[:root_index], inorder[:root_index])
    root.right = buildTreeFromPostIn(postorder[root_index:-1], inorder[root_index + 1:])

    return root

def areTraversalsSame(N, preorder, inorder, postorder):
    # Build trees from different traversals
    tree_pre_in = buildTreeFromPreIn(preorder, inorder)
    tree_post_in = buildTreeFromPostIn(postorder, inorder)

    # Check if the trees are identical
    return areTreesIdentical(tree_pre_in, tree_post_in)

def areTreesIdentical(root1, root2):
    if not root1 and not root2:
        return True
    if not root1 or not root2:
        return False
    return (root1.val == root2.val and
            areTreesIdentical(root1.left, root2.left) and
            areTreesIdentical(root1.right, root2.right)

# Example
N = 5
preorder = [1, 2, 4, 5, 3]
inorder = [4, 2, 5, 1, 3]
postorder = [4, 5, 2, 3, 1]
result = areTraversalsSame(N, preorder, inorder, postorder)
if result:
    print("Yes")
else:
    print("No")
